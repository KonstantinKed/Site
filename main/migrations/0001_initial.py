# Generated by Django 4.1 on 2022-09-01 04:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('brand_id', models.AutoField(primary_key=True, serialize=False)),
                ('brand_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренди',
                'db_table': 'brands',
                'ordering': ['brand_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('cond_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('cond_name', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Стан',
                'verbose_name_plural': 'Стан',
                'db_table': 'condition',
                'ordering': ['-cond_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('conn_id', models.IntegerField(primary_key=True, serialize=False)),
                ('conn_name', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': "Під'єднання",
                'verbose_name_plural': "Під'єднання",
                'db_table': 'connection',
                'ordering': ['-conn_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryPretty',
            fields=[
                ('invent_id_code', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('input_date', models.DateField()),
                ('comments', models.CharField(blank=True, max_length=255, null=True)),
                ('pics_link', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'inventory_pretty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('loc_id', models.IntegerField(primary_key=True, serialize=False)),
                ('loc_name_eng', models.CharField(blank=True, max_length=25, null=True)),
                ('loc_name_ua', models.CharField(blank=True, max_length=35, null=True)),
            ],
            options={
                'verbose_name': 'Де знаходиться',
                'verbose_name_plural': 'Де знаходиться',
                'db_table': 'location',
                'ordering': ['loc_name_eng'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Names',
            fields=[
                ('name_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_eng', models.CharField(max_length=255)),
                ('name_ua', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Назва майна',
                'verbose_name_plural': 'Назва майна',
                'db_table': 'names',
                'ordering': ['name_ua'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_no', models.CharField(max_length=10)),
                ('txt', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'test_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Apartments',
            fields=[
                ('apt_id', models.AutoField(primary_key=True, serialize=False)),
                ('apt_name_eng', models.CharField(blank=True, max_length=50, null=True)),
                ('apt_name_ua', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Квартира',
                'verbose_name_plural': 'Квартири',
                'db_table': 'apartments',
                'ordering': ['apt_id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invent_id', models.CharField(default=0, max_length=12)),
                ('input_date', models.DateField()),
                ('comments', models.CharField(blank=True, max_length=255, null=True)),
                ('apt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.apartments')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.brands')),
                ('cond', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.condition')),
                ('conn', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.connection')),
                ('loc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.location')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.names')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.type')),
            ],
            options={
                'verbose_name': 'Інвентаризація',
                'verbose_name_plural': 'Інвентаризація',
                'db_table': 'inventory',
                'ordering': ['invent_id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pics_link', models.BinaryField(null=True)),
                ('img', models.ImageField(upload_to='pics/')),
                ('invent', models.ForeignKey(db_column='invent', on_delete=django.db.models.deletion.DO_NOTHING, to='main.inventory')),
            ],
            options={
                'verbose_name': 'Фотографії',
                'verbose_name_plural': 'Фотографії',
                'db_table': 'pics',
                'ordering': ['invent'],
                'managed': True,
            },
        ),
    ]
